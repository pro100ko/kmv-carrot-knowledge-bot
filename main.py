
import logging
import os
import sys
from telegram import Update, Bot
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from telegram.constants import ParseMode

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from config import BOT_TOKEN, WEBHOOK_URL, WEBHOOK_PATH

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
from handlers.user_management import register_user_handler, start
from handlers.knowledge_base import knowledge_base_handler, category_handler, product_handler, search_handler
from handlers.testing import testing_handler, test_selection_handler, test_question_handler, test_result_handler
from handlers.admin import admin_handler, admin_categories_handler, admin_products_handler, admin_tests_handler, admin_stats_handler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    stream=sys.stdout
)
logger = logging.getLogger(__name__)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", start))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(knowledge_base_handler, pattern="^knowledge_base$"))
    application.add_handler(CallbackQueryHandler(category_handler, pattern="^category:"))
    application.add_handler(CallbackQueryHandler(product_handler, pattern="^product:"))
    
    application.add_handler(CallbackQueryHandler(testing_handler, pattern="^testing$"))
    application.add_handler(CallbackQueryHandler(test_selection_handler, pattern="^test_select:"))
    application.add_handler(CallbackQueryHandler(test_question_handler, pattern="^test_answer:"))
    application.add_handler(CallbackQueryHandler(test_result_handler, pattern="^test_result:"))
    
    application.add_handler(CallbackQueryHandler(admin_handler, pattern="^admin$"))
    application.add_handler(CallbackQueryHandler(admin_categories_handler, pattern="^admin_categories"))
    application.add_handler(CallbackQueryHandler(admin_products_handler, pattern="^admin_products"))
    application.add_handler(CallbackQueryHandler(admin_tests_handler, pattern="^admin_tests"))
    application.add_handler(CallbackQueryHandler(admin_stats_handler, pattern="^admin_stats"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞
    application.add_handler(MessageHandler(filters.Regex(r'^\üîç –ü–æ–∏—Å–∫$'), search_handler))
    application.add_handler(MessageHandler(filters.Regex(r'^\üîç .*'), search_handler))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, register_user_handler))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    if os.environ.get("ENVIRONMENT") == "production":
        # –ù–∞ –ø—Ä–æ–¥–∞–∫—à–Ω-—Å–µ—Ä–≤–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º webhook
        application.run_webhook(
            listen="0.0.0.0",
            port=int(os.environ.get("PORT", 8443)),
            url_path=WEBHOOK_PATH,
            webhook_url=WEBHOOK_URL
        )
        logger.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {WEBHOOK_URL}")
    else:
        # –õ–æ–∫–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling")
    
if __name__ == '__main__':
    main()
