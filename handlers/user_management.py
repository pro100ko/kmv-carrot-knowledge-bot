
from aiogram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

import firebase_db
from config import ADMIN_IDS
from utils.keyboards import get_main_keyboard

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        'telegram_id': user.id,
        'first_name': user.first_name,
        'last_name': user.last_name,
        'username': user.username,
    }
    firebase_db.register_user(user_data)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_message = (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç ¬´–ú–æ—Ä–∫–æ–≤–∫–∞ –ö–ú–í¬ª, {user.first_name}!\n\n"
        "ü•ï –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è."
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    is_admin = user.id in ADMIN_IDS
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = get_main_keyboard(is_admin)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await update.message.reply_text(
        welcome_message,
        reply_markup=keyboard
    )

async def register_user_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        'telegram_id': user.id,
        'first_name': user.first_name,
        'last_name': user.last_name,
        'username': user.username,
    }
    firebase_db.register_user(user_data)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    message_text = update.message.text
    
    if message_text == "üçé –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π":
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ –∂–µ, —á—Ç–æ –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É knowledge_base
        await knowledge_base_handler(update, context)
    elif message_text == "üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ":
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ –∂–µ, —á—Ç–æ –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É testing
        await testing_handler(update, context)
    elif message_text == "‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" and user.id in ADMIN_IDS:
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ –∂–µ, —á—Ç–æ –∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É admin
        await admin_handler(update, context)
    else:
        # –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        is_admin = user.id in ADMIN_IDS
        keyboard = get_main_keyboard(is_admin)
        
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
            reply_markup=keyboard
        )

# –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
from handlers.knowledge_base import knowledge_base_handler
from handlers.testing import testing_handler
from handlers.admin import admin_handler
